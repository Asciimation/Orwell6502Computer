100 REM   "ABCDEFGHIJKLMNOPQRSTUVWXYZ ABCDEFGHIJKLMNOPQRSTUVWXYZ" 
110 R1$ = "EKMFLGDQVZNTOWYHXUSPAIBRCJ UWYGADFPVZBECKMTHXSLRINQOJ" : REM I
120 R2$ = "AJDKSIRUXBLHWTMCQGZNPYFVOE AJPCZWRLFBDKOTYUQGENHXMIVS" : REM II
130 R3$ = "BDFHJLCPRTXVZNYEIWGAKMUSQO TAGBPCSDQEUFVNZHYIXJWLRKOM" : REM III
140 R4$ = "ESOVPZJAYQUIRHXLNFTGKDCMWB HZWVARTNLGUPXQCEJMBSKDYOIF" : REM IV   
150 R5$ = "VZBRGITYUPSDNHLXAWMJQOFECK QCYLXWENFTZOSMVJUDKGIARPHB" : REM V

200 UB$ = "YRUHQSLDPXNGOKMIEBFZCWVJAT" : REM Reflector B
210 UC$ = "FVPJIAOYEDRZXWGCTKUQSBNMHL" : REM Reflector C

230 RF$ = " " : REM Bombe Reflector
240 D1$ = " " : REM Top bombe drum
250 D2$ = " " : REM Middle bombe drum
260 D3$ = " " : REM Bottom bombe drum
270 DIM DO(2) : REM Current drum offsets
280 D = 0: REM Drum offset from ENIGMA rotor 

300 DIM SO$(12) : REM Scramblers relative offsets
310 DIM SL$(12) : REM Scramblers output letters

400 DIM LA(25,25) : REM Letters array
410 L1$ = "" : REM Diagonal board letter 1
420 L2$ = "" : REM Diagonal board letter 2

500 ID$ = "ZZZ" : REM Indicator drums

600 P = 0 : REM Debug printing

650 UT = 0 : REM Untraced voltages

700 ML = 0 : REM Number of menu letters
710 DIM ML$(12) : REM Menu letters array
720 DIM MC(12,4) : REM Menu connections array

800 IV = 0 : REM Input voltage letter
810 IL = 0 : REM Test menu letter

850 C1 = 0 : REM Drum 1 counter
860 C2 = 0 : REM Drum 2 counter
870 C3 = 0 : REM Drum 3 counter

900 CS$ = "ZZZ" : REM Scrambler offset 
910 SV = 1 : REM Scrambler value
920 V$ = "" : REM Scrambler character
930 OD = 0 : REM Offset current scrambler drum
940 CD$ = "" : REM Current scrambler rotor
950 L$ = "" : REM Scrambler drum letter
960 L = 0 : REM Scrambler drum letter value
970 SL = 0 : REM Scramblers connected output letter

1000 REM ---------- Main program ----------
1010 CLS
1020 REM Bombe setup
1030 PRINT "READING BOMBE SETUP DATA..." : PRINT
1040 GOSUB 10000

1050 PRINT "TOP DRUM: "; : CD$ = D1$ : GOSUB 1600
1060 PRINT "MIDDLE DRUM: "; : CD$ = D2$ : GOSUB 1600
1070 PRINT "BOTTOM DRUM: "; : CD$ = D3$ : GOSUB 1600
1080 PRINT "REFLECTOR: "; : GOSUB 1700

1090 PRINT "SCRAMBLERS: "
1100 GOSUB 1800 : REM Print scramblers
1110 PRINT 

1120 PRINT "SCRAMBLER OUTPUT LETTERS: ";
1130 FOR I = 0 TO 12
1140 PRINT SL$(I); : PRINT " ";
1150 NEXT I
1160 PRINT 

1170 PRINT "NUMBER OF MENU LETTERS: "; : PRINT ML

1180 PRINT "MENU LETTERS: ";
1190 FOR I = 0 TO ML
1200 PRINT ML$(I); : PRINT " ";
1210 NEXT I
1220 PRINT 

1230 PRINT "INPUT MENU LETTER: "; : PRINT ML$(0);
1240 PRINT

1250 PRINT "INPUT STECKER LETTER: "; : PRINT CHR$(IV+65);
1260 PRINT

1270 PRINT "CONNECTIONS:"
1280 FOR I = 1 TO ML 
1290 PRINT ML$(I-1); : PRINT ":";
1300 FOR J = 0 TO 4 
1310 IF MC(I-1, J) <> 0 THEN PRINT MC(I-1, J);
1320 NEXT J
1330 PRINT
1340 NEXT I

1350 PRINT "INDICATOR START: "; : PRINT ID$
1360 IF ID$ = "ZZZ" THEN GOTO 1450
1370 PRINT "OFFSETTING SCRAMBLERS:"
1380 FOR K = 0 TO 12
1390 IF LEN(SO$(K)) = 0 THEN GOTO 1440
1400 CS$ = SO$(K)
1410 GOSUB 2800 : REM Increment drums
1420 SO$(K) = CS$
1430 NEXT K

1440 GOSUB 1800 : REM Print scramblers
1450 GOSUB 5000 :  REM Solve subroutine.
1460 END

1600 REM ---------- Print drum number subroutine ----------
1610 IF CD$ = R1$ THEN PRINT "I"
1620 IF CD$ = R2$ THEN PRINT "II"
1630 IF CD$ = R3$ THEN PRINT "III"
1640 IF CD$ = R4$ THEN PRINT "IV"
1650 IF CD$ = R5$ THEN PRINT "V"
1660 RETURN

1700 REM ---------- Print reflector subroutine ----------
1710 IF RF$ = UB$ THEN PRINT "B"
1720 IF RF$ = UC$ THEN PRINT "C"
1730 RETURN

1800 REM ---------- Print scrambler subroutine ----------
1810 FOR K = 0 TO 12 : PRINT SO$(K); : PRINT " "; : NEXT K
1820 RETURN

2000 REM ---------- Scrambler subroutine ----------
2005 REM PRINT "INPUT: "; : PRINT CHR$(SV+64); 
2010 CD$ = D3$
2020 OD = ASC(MID$(CS$, 3, 1)) - 65
2030 D = DO(2)
2040 GOSUB 2400 : REM Calculate scrambler offset
2050 GOSUB 2500 : REM Forward through rotor

2060 CD$ = D2$
2070 OD = ASC(MID$(CS$, 2, 1)) - 65
2080 D = DO(1)
2090 GOSUB 2400 : REM Calculate scrambler offset
2100 GOSUB 2500 : REM Forward through rotor

2110 CD$ = D1$
2120 OD = ASC(MID$(CS$, 1, 1)) - 65
2130 D = DO(0)
2140 GOSUB 2400 : REM Calculate scrambler offset
2150 GOSUB 2500 : REM Forward through rotor

2160 V$ = MID$(RF$, SV, 1)
2170 SV = ASC(V$) - 64 
2175 IF P = 1 THEN PRINT V$;

2180 CD$ = D1$
2190 OD = ASC(MID$(CS$, 1, 1)) - 65
2200 D = DO(0)
2210 GOSUB 2400 : REM Calculate scrambler offset
2220 GOSUB 2600 : REM Back through rotor

2230 CD$ = D2$
2240 OD = ASC(MID$(CS$, 2, 1)) - 65
2250 D = DO(1)
2260 GOSUB 2400 : REM Calculate scrambler offset
2270 GOSUB 2600 : REM Back through rotor

2280 CD$ = D3$
2290 D = DO(2)
2300 OD = ASC(MID$(CS$, 3, 1)) - 65
2310 GOSUB 2400 : REM Calculate scrambler offset
2320 GOSUB 2600 : REM Back through rotor

2325 REM PRINT " OUTPUT: "; : PRINT V$ 
2330 RETURN

2350 REM ---------- Wrap scrambler offset subroutine ----------
2360 IF SV < 1 THEN SV = SV + 26 : GOTO 2360
2370 IF SV > 26 THEN SV = SV - 26 : GOTO 2370
2380 RETURN

2400 REM ---------- Scrambler offset subroutine ----------
2410 REM SV = letter, OD = drum offset, 25 = Z ring, D = bombe drum offset
2420 SV = SV + OD - 25 - D
2430 GOSUB 2350 : REM Handle wapping
2440 RETURN

2500 REM ---------- Forward through scrambler subroutine ----------
2510 V$ = MID$(CD$, SV, 1)
2520 REM SV = letter, OD = drum offset, 25 = Z ring, D = bombe drum offset   
2530 SV = (ASC(V$) - 64) - OD + 25 + D
2540 GOSUB 2350 : REM Handle wapping
2550 V$ = CHR$(SV+64) 
2555 IF P = 1 THEN PRINT V$;
2560 RETURN

2600 REM ---------- Back  through scrambler subroutine ----------
2610 V$ = MID$(CD$, SV + 27, 1)
2620 REM SV = letter, OD = drum offset, 25 = Z ring, D = bombe drum offset  
2630 SV = (ASC(V$) - 64) - OD + 25 + D
2640 GOSUB 2350 : REM Handle wapping
2650 V$ = CHR$(SV+64)
2655 IF P = 1 THEN PRINT V$;
2660 RETURN

2700 REM ---------- Move drums subroutine ----------
2710 FOR I = 0 TO 12
2720 IF LEN(SO$(I)) = 0 THEN GOTO 2760
2730 CS$ = SO$(I)
2740 GOSUB 3000
2750 SO$(I) = CS$
2760 NEXT I
2770 RETURN

2800 REM ---------- Set scrambler offset subroutine ----------
2810 L = ASC(LEFT$(CS$, 1))
2820 L = L + (26 - (ASC(LEFT$(ID$, 1)) - 64))
2830 IF L < 65 THEN L = L + 26 
2840 IF L > 90 THEN L = L - 26 
2850 L$ = CHR$(L) 
2860 CS$ = L$ + RIGHT$(CS$, 2)

2870 L = ASC(MID$(CS$, 2, 1))
2880 L = L + (26 - (ASC(MID$(ID$, 2, 1)) - 64))
2890 IF L < 65 THEN L = L + 26
2900 IF L > 90 THEN L = L - 26
2910 L$ = CHR$(L)
2920 CS$ = LEFT$(CS$, 1) + L$ + RIGHT$(CS$, 1)

2930 L = ASC(RIGHT$(CS$, 1))
2940 L = L + (26 - (ASC(RIGHT$(ID$, 1)) - 64))
2950 IF L < 65 THEN L = L + 26
2960 IF L > 90 THEN L = L - 26
2970 L$ = CHR$(L)
2980 CS$ = LEFT$(CS$,2) + L$
2990 RETURN

3000 REM ---------- Increment scrambler offset subroutine ----------
3010 L$ = LEFT$(CS$, 1)
3020 L = ASC(L$)
3030 L = L + 1 
3040 IF L > 90 THEN L = 65 
3050 L$ = CHR$(L) 
3060 CS$ = L$ + RIGHT$(CS$, 2)
3070 IF L$ <> "A" THEN GOTO 3300

3100 L$ = MID$(CS$, 2, 1)
3110 L = ASC(L$)
3120 L = L + 1
3130 IF L > 90 THEN L = 65
3140 L$ = CHR$(L)
3150 CS$ = LEFT$(CS$, 1) + L$ + RIGHT$(CS$, 1)
3160 IF L$ <> "A" THEN GOTO 3300

3200 L$ = RIGHT$(CS$, 1)
3210 L = ASC(L$)
3220 L = L + 1
3230 IF L > 90 THEN L = 65
3240 L$ = CHR$(L)
3250 CS$ = LEFT$(CS$,2) + L$
3300 RETURN

3500 REM ---------- Decrement indicator drums subroutine ----------
3510 L$ = LEFT$(ID$, 1)
3520 L = ASC(L$)
3530 L = L - 1 
3540 IF L < 65 THEN L = 90 
3550 L$ = CHR$(L) 
3560 ID$ = L$ + RIGHT$(ID$, 2)
3570 IF L$ <> "Z" THEN GOTO 3800

3600 L$ = MID$(ID$, 2, 1)
3610 L = ASC(L$)
3620 L = L - 1
3630 IF L < 65 THEN L = 90
3640 L$ = CHR$(L)
3650 ID$ = LEFT$(ID$, 1) + L$ + RIGHT$(ID$, 1)
3660 IF L$ <> "Z" THEN GOTO 3800

3700 L$ = RIGHT$(ID$, 1)
3710 L = ASC(L$)
3720 L = L - 1
3730 IF L < 65 THEN L = 90
3740 L$ = CHR$(L)
3750 ID$ = LEFT$(ID$,2) + L$
3800 RETURN

4000 REM ---------- Diagonal board subroutine ----------
4010 IF LA(ASC(L1$) - 65, ASC(L2$) - 65) = 0 THEN GOSUB 4100
4020 IF L1$ = L2$ THEN GOTO 4050
4030 T$ = L1$ : L1$ = L2$: L2$ = T$
4040 IF LA(ASC(L1$) - 65, ASC(L2$) - 65) = 0 THEN GOSUB 4100
4050 RETURN

4100 REM ---------- Set value subroutine ---------- 
4120 FOR I2 = 0 TO ML 
4130 IF L1$ = ML$(I2) THEN GOTO 4200
4140 NEXT I2
4150 LA(ASC(L1$) - 65, ASC(L2$) - 65) = 2
4160 RETURN

4200 LA(ASC(L1$) - 65, ASC(L2$) - 65) = -1
4205 UT = UT + 1
4210 RETURN


4300 REM ---------- Print letter array ----------
4310 PRINT : FOR I1 = 0 TO 25
4320 PRINT "  ";
4330 PRINT CHR$(I1+65);
4340 NEXT I1 : PRINT
4350 FOR I1 = 0 TO 25
4360 FOR J1 = 0 TO 25
4370 IF J1 = 0 THEN GOTO 4440
4380 PRINT LA(I1,J1);
4390 NEXT J1
4400 PRINT
4410 NEXT I1
4420 PRINT
4430 RETURN
4440 IF I1 = IL THEN PRINT "?"; : GOTO 4380
4450 PRINT CHR$(I1+65); : GOTO 4380

4500 REM ---------- Print test register ----------
4510 PRINT "TEST REGISTER: " 
4520 FOR I1 = 0 TO 25
4530 IF I1 = 0 THEN PRINT " ";
4540 PRINT CHR$(I1+65); : PRINT "  ";
4550 NEXT I1 : PRINT
4560 FOR I2 = 0 TO 25
4570 PRINT LA(IL,I2);
4580 NEXT I2
4590 PRINT
4600 RETURN

4700 REM ---------- Clear letter array ----------
4710 FOR I1 = 0 TO 25
4720 FOR J1 = 0 TO 25
4730 LA(I1,J1) = 0
4740 NEXT J1
4760 NEXT I1
4770 UT = 0
4780 RETURN

5000 REM ---------- Solve subroutine ----------
5010 PRINT CHR$(7)
5020 GOSUB 4700 : REM Clear letter array
5030 L1$ = CHR$(IL + 65) : L2$ = CHR$(IV + 65) : GOSUB 4000

5050 GOSUB 2700 : REM Increment drums
5060 GOSUB 3500 : REM Decrement indicator 
5070 PRINT :PRINT : PRINT "INDICATOR: "; : PRINT ID$
5080 PRINT "SCRAMBLERS: "
5090 IF ID$ = "ZZZ" THEN GOTO 5500
5100 GOSUB 1800 : REM Print scramblers

5110 FOR I = 1 TO ML : REM For each menu letter
5115 IF UT = 0 THEN GOTO 5210
5120 IF P = 1 THEN PRINT
5130 IF P = 1 THEN PRINT "CHECKING LETTER: "; : PRINT ML$(I-1)
5135 IF P = 1 THEN PRINT "Untraced: "; : PRINT UT
5140 IF P = 1 THEN GOSUB 4300 : REM Print letter array
5160 FOR J = 0 TO 25 : REM Check each voltage on this letter
5170 IF LA(ASC(ML$(I-1))-65, J) = -1 THEN GOSUB 6000
5180 NEXT J
5190 NEXT I
5200 GOTO 5110

5210 REM Check test register
5260 IS = 0
5270 FOR I2 = 0 TO 25
5280 IF LA(IL,I2) = 1 THEN IS = IS + 1
5290 NEXT I2
5300 IF IS < 26 GOTO 5400 : REM A stop!
5310 GOTO 5020 : REM All voltages traced

5400 PRINT "STOP" : PRINT CHR$(7)
5410 PRINT "INDICATOR: "; : PRINT ID$
5420 GOSUB 4500 : REM Print test register
5430 STOP
5440 GOTO 5020

5500 PRINT "BOMB RUN COMPLETE" 
5510 PRINT CHR$(7) : PRINT CHR$(7)
5520 PRINT CHR$(7) : PRINT CHR$(7)
5530 END

6000 REM ---------- Trace voltage ----------
6010 LA(ASC(ML$(I-1))-65, J) = 1 : UT = UT - 1
6020 FOR K = 0 TO 4
6030 REM For each connected scrambler   
6040 IF MC(I-1,K) = 0 THEN RETURN
6050 REM Setup the scrambler
6060 CS$ = SO$(MC(I-1,K)-1)
6070 SV = J + 1 : REM Input letter
6080 GOSUB 2000 : REM Through scrambler
6090 REM Set a -1 on the output letter for the scrambler's connected menu letter
6100 SL = ASC(SL$(MC(I-1,K)-1)) - 65 
6110 IF LA(SL,SV-1) = -1 THEN GOTO 6140
6120 IF LA(SL,SV-1) = 1 GOTO 6140
6140 REM Feed into diagonal board
6150 L1$ = CHR$(SL + 65)
6160 L2$ = CHR$(SV - 1 + 65 )
6170 GOSUB 4000 : REM Diagonal board
6175 GOSUB 6200 : REM Debug printing
6180 NEXT K
6190 RETURN

6200 REM ---------- Print debugging subroutine ----------
6210 IF P <> 1 GOTO 6270
6220 PRINT MC(I-1,K); : PRINT" ";
6230 GOSUB 6500 : PRINT":";
6240 PRINT CHR$(J+65); : PRINT"-"; 
6250 PRINT CHR$(SV+64); : PRINT" ";
6260 PRINT CHR$(SL+65); : PRINT 
6270 RETURN

6500 REM ---------- Print drum ----------
6510 FOR K1 = 1 TO 3
6520 L = ASC(MID$(CS$,K1,1))
6530 L = L - DO(K1-1)
6540 IF L < 65 THEN L = L + 26
6550 IF L > 90 THEN L = L - 26 
6560 PRINT CHR$(L);
6570 NEXT K1
6580 PRINT " ";
6590 RETURN

10000 REM ---------- Setup subroutine ----------
10010 FOR I = 0 TO 2 : REM 3 drums
10020 READ S$
10030 GOSUB 15000 : REM Drum setup subroutine 
10040 NEXT I

10050 READ S$ : REM Reflector
10060 GOSUB 16000

10070 FOR I = 0 TO 12 : REM 12 scrambler offsets
10080 READ S$
10090 SO$(I)= S$
10100 NEXT I

10200 FOR I = 0 TO 12 : REM 12 scrambler output letters
10210 READ S$
10220 SL$(I)= S$
10230 NEXT I

10240 READ ML : REM Number of menu letters    

10250 FOR I = 1 TO ML : REM Menu letters
10260 READ S$
10270 ML$(I-1)= S$
10280 NEXT I

10290 IL = ASC(ML$(0)) - 65 : REM Input letter value

10300 FOR I = 1 TO ML : REM Menu letter connections
10310 FOR J = 0 TO 3 : REM Connections for letter
10320 READ S
10330 MC(I-1, J) = S
10340 NEXT J
10350 NEXT I

10360 READ S$
10370 IV = (ASC(S$) - 65) : REM Input letter value

10380 READ S$
10390 ID$ = S$ : REM Indicator offset

10400 READ S
10410 P = S : REM Debug printing

10420 RETURN

15000 REM ---------- Drum setup subroutine ----------
15010 IF S$ = "I" THEN CD$ = R1$ : D = 1
15020 IF S$ = "II" THEN CD$ = R2$ : D = 1
15030 IF S$ = "III" THEN CD$ = R3$ : D = 1
15040 IF S$ = "IV" THEN CD$ = R4$ : D = 2
15050 IF S$ = "V" THEN CD$ = R5$ : D = 3
15060 IF I = 0 THEN D1$ = CD$ : DO(0) = D
15070 IF I = 1 THEN D2$ = CD$ : DO(1) = D
15080 IF I = 2 THEN D3$ = CD$ : DO(2) = D
15090 RETURN

16000 REM ---------- Reflector setup subroutine ----------
16010 IF S$ = "B" THEN RF$ = UB$
16020 IF S$ = "C" THEN RF$ = UC$
16030 RETURN

20000 REM ---------- DATA SECTION ----------

20010 REM Set up drums
20020 DATA "II", "V", "III"
20030 REM Set up reflector
20040 DATA "B"

20100 REM Set up data values
20110 REM 13 scrambler settings
20120 DATA "ZZK", "ZZE", "ZZF", "ZZN", "ZZM", "ZZG"
20130 DATA "ZZP", "ZZB", "ZZJ", "ZZI", "ZZL", "ZZO", ZZA:W

20200 REM 13 scrambler output letters
20210 DATA "E", "G", "R", "A", "S", "V"
20220 DATA "E", "N", "Z", "R", "G", "L", "W"

20300 REM Number of menu letters
20310 DATA 12 
20320 REM Menu letters (input = first letter)
20330 DATA "G", "R", "A", "S", "V", "N"
20340 DATA "H", "Z", "L", "W", "U", "E"

20400 REM Menu connection lists 
20410 REM 1 data line for each menu letter, 5 possible connections
20420 DATA 3, 12, 0, 0 : REM 'G'
20430 DATA 4, 11, 0, 0 : REM 'R'
20440 DATA 5, 0, 0, 0 : REM 'A'
20450 DATA 6, 0, 0, 0 : REM 'S'
20460 DATA 7, 0, 0, 0 : REM 'V'
20470 DATA 0, 0, 0, 0 : REM 'N'
20480 DATA 9, 0, 0, 0 : REM 'H'
20490 DATA 10, 0, 0, 0 : REM 'Z'
20500 DATA 0, 0, 0, 0 : REM 'L'
20500 DATA 0, 0, 0, 0 : REM 'W'
20510 DATA 1, 0, 0, 0 : REM 'U'
20520 DATA 2, 8, 0, 0 : REM 'E'

20600 REM Test input voltage
20610 DATA "A"

20700 REM Indicator offset
20710 DATA "EKX"

20800 REM Print debug information
20810 DATA 0



